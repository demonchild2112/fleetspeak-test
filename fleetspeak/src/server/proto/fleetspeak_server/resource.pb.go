// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/server/proto/fleetspeak_server/resource.proto

package fleetspeak_server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Represents client resource-usage data in the data-store.
type ClientResourceUsageRecord struct {
	// Name of the client service that resource usage is charged/attributed to
	// e.g 'system' for the system Fleetspeak service, or the name of a daemon
	// service as specified in its config.
	Scope            string                     `protobuf:"bytes,1,opt,name=scope" json:"scope,omitempty"`
	Pid              int64                      `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	ProcessStartTime *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=process_start_time,json=processStartTime" json:"process_start_time,omitempty"`
	// When the resource-usage metrics were measured on the client.
	ClientTimestamp *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	// When the resource usage record was written to the data-store.
	ServerTimestamp *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=server_timestamp,json=serverTimestamp" json:"server_timestamp,omitempty"`
	// CPU-usage is in millis per second.
	MeanUserCpuRate       float32 `protobuf:"fixed32,6,opt,name=mean_user_cpu_rate,json=meanUserCpuRate" json:"mean_user_cpu_rate,omitempty"`
	MaxUserCpuRate        float32 `protobuf:"fixed32,7,opt,name=max_user_cpu_rate,json=maxUserCpuRate" json:"max_user_cpu_rate,omitempty"`
	MeanSystemCpuRate     float32 `protobuf:"fixed32,8,opt,name=mean_system_cpu_rate,json=meanSystemCpuRate" json:"mean_system_cpu_rate,omitempty"`
	MaxSystemCpuRate      float32 `protobuf:"fixed32,9,opt,name=max_system_cpu_rate,json=maxSystemCpuRate" json:"max_system_cpu_rate,omitempty"`
	MeanResidentMemoryMib int32   `protobuf:"varint,10,opt,name=mean_resident_memory_mib,json=meanResidentMemoryMib" json:"mean_resident_memory_mib,omitempty"`
	MaxResidentMemoryMib  int32   `protobuf:"varint,11,opt,name=max_resident_memory_mib,json=maxResidentMemoryMib" json:"max_resident_memory_mib,omitempty"`
}

func (m *ClientResourceUsageRecord) Reset()                    { *m = ClientResourceUsageRecord{} }
func (m *ClientResourceUsageRecord) String() string            { return proto.CompactTextString(m) }
func (*ClientResourceUsageRecord) ProtoMessage()               {}
func (*ClientResourceUsageRecord) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ClientResourceUsageRecord) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *ClientResourceUsageRecord) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ClientResourceUsageRecord) GetProcessStartTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ProcessStartTime
	}
	return nil
}

func (m *ClientResourceUsageRecord) GetClientTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.ClientTimestamp
	}
	return nil
}

func (m *ClientResourceUsageRecord) GetServerTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.ServerTimestamp
	}
	return nil
}

func (m *ClientResourceUsageRecord) GetMeanUserCpuRate() float32 {
	if m != nil {
		return m.MeanUserCpuRate
	}
	return 0
}

func (m *ClientResourceUsageRecord) GetMaxUserCpuRate() float32 {
	if m != nil {
		return m.MaxUserCpuRate
	}
	return 0
}

func (m *ClientResourceUsageRecord) GetMeanSystemCpuRate() float32 {
	if m != nil {
		return m.MeanSystemCpuRate
	}
	return 0
}

func (m *ClientResourceUsageRecord) GetMaxSystemCpuRate() float32 {
	if m != nil {
		return m.MaxSystemCpuRate
	}
	return 0
}

func (m *ClientResourceUsageRecord) GetMeanResidentMemoryMib() int32 {
	if m != nil {
		return m.MeanResidentMemoryMib
	}
	return 0
}

func (m *ClientResourceUsageRecord) GetMaxResidentMemoryMib() int32 {
	if m != nil {
		return m.MaxResidentMemoryMib
	}
	return 0
}

func init() {
	proto.RegisterType((*ClientResourceUsageRecord)(nil), "fleetspeak.server.ClientResourceUsageRecord")
}

func init() {
	proto.RegisterFile("fleetspeak/src/server/proto/fleetspeak_server/resource.proto", fileDescriptor2)
}

var fileDescriptor2 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcf, 0x6b, 0xdb, 0x30,
	0x14, 0xc7, 0x71, 0x7e, 0x6d, 0x51, 0x60, 0x71, 0xb4, 0x8c, 0x79, 0xb9, 0xcc, 0xec, 0xe4, 0x31,
	0x66, 0xc3, 0x46, 0xe9, 0xa5, 0xb7, 0x50, 0xe8, 0x25, 0x17, 0xa5, 0x39, 0x0b, 0xd9, 0x79, 0x09,
	0xa6, 0x51, 0x24, 0x24, 0xb9, 0x38, 0x7f, 0x5f, 0xff, 0xb1, 0x22, 0xc9, 0x89, 0xd3, 0xb4, 0x90,
	0x9b, 0xfd, 0xbe, 0x9f, 0xef, 0x47, 0x8f, 0x87, 0xee, 0x36, 0x3b, 0x00, 0xa3, 0x25, 0xb0, 0xa7,
	0x4c, 0xab, 0x22, 0xd3, 0xa0, 0x9e, 0x41, 0x65, 0x52, 0x09, 0x23, 0xb2, 0x36, 0xa3, 0xcd, 0x5c,
	0x81, 0x16, 0x95, 0x2a, 0x20, 0x75, 0x00, 0x9e, 0xb4, 0x44, 0xea, 0x89, 0xd9, 0xcf, 0xad, 0x10,
	0xdb, 0x1d, 0x78, 0x43, 0x5e, 0x6d, 0x32, 0x53, 0x72, 0xd0, 0x86, 0x71, 0xe9, 0x3b, 0xbf, 0x5e,
	0x7a, 0xe8, 0xc7, 0x7c, 0x57, 0xc2, 0xde, 0x90, 0x46, 0xb6, 0xd2, 0x6c, 0x0b, 0x04, 0x0a, 0xa1,
	0xd6, 0x78, 0x8a, 0xfa, 0xba, 0x10, 0x12, 0xa2, 0x20, 0x0e, 0x92, 0x21, 0xf1, 0x3f, 0x38, 0x44,
	0x5d, 0x59, 0xae, 0xa3, 0x4e, 0x1c, 0x24, 0x5d, 0x62, 0x3f, 0xf1, 0x03, 0xc2, 0x52, 0x89, 0x02,
	0xb4, 0xa6, 0xda, 0x30, 0x65, 0xa8, 0x7d, 0x26, 0xea, 0xc6, 0x41, 0x32, 0xfa, 0x37, 0x4b, 0xfd,
	0x0e, 0xe9, 0x71, 0x87, 0xf4, 0xf1, 0xb8, 0x03, 0x09, 0x9b, 0xd6, 0xd2, 0x96, 0xec, 0x18, 0xdf,
	0xa3, 0xb0, 0x70, 0xeb, 0xd0, 0xd3, 0xa6, 0x51, 0xef, 0xaa, 0x67, 0xec, 0x3b, 0xa7, 0x81, 0xd5,
	0xf8, 0x0b, 0x9c, 0x69, 0xfa, 0xd7, 0x35, 0xbe, 0xd3, 0x6a, 0xfe, 0x20, 0xcc, 0x81, 0xed, 0x69,
	0xa5, 0x41, 0xd1, 0x42, 0x56, 0x54, 0x31, 0x03, 0xd1, 0x20, 0x0e, 0x92, 0x0e, 0x19, 0xdb, 0x64,
	0xa5, 0x41, 0xcd, 0x65, 0x45, 0x98, 0x01, 0xfc, 0x1b, 0x4d, 0x38, 0xab, 0x2f, 0xd8, 0x4f, 0x8e,
	0xfd, 0xc2, 0x59, 0x7d, 0x8e, 0x66, 0x68, 0xea, 0xbc, 0xfa, 0xa0, 0x0d, 0xf0, 0x96, 0xfe, 0xec,
	0xe8, 0x89, 0xcd, 0x96, 0x2e, 0x3a, 0x16, 0xfe, 0xa2, 0xaf, 0xd6, 0x7d, 0xc9, 0x0f, 0x1d, 0x1f,
	0x72, 0x56, 0xbf, 0xc5, 0x6f, 0x51, 0xe4, 0xfc, 0x0a, 0x74, 0xb9, 0xb6, 0xc7, 0xe4, 0xc0, 0x85,
	0x3a, 0x50, 0x5e, 0xe6, 0x11, 0x8a, 0x83, 0xa4, 0x4f, 0xbe, 0xd9, 0x9c, 0x34, 0xf1, 0xc2, 0xa5,
	0x8b, 0x32, 0xc7, 0x37, 0xe8, 0xbb, 0x7d, 0xe7, 0xa3, 0xde, 0xc8, 0xf5, 0xa6, 0x9c, 0xd5, 0xef,
	0x6a, 0xf9, 0xc0, 0x1d, 0xf3, 0xff, 0x6b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0xf2, 0x17, 0xfb,
	0xc0, 0x02, 0x00, 0x00,
}
